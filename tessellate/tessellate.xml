<tool id="galaxy_tessellate" name="Galaxy Tessellate" version="0.1">
    <description>A package for quantifying cyclic molecule conformations
 </description>
    <macros>
        <import>macros.xml</import>
        <import>macros_tessellate.xml</import>
    </macros>
    <requirements>
      <requirement type="package" version="0.3.7">tessellate</requirement>
    </requirements>
    <expand macro="stdio" />
    <command>
        <![CDATA[
        python "$tessellate_script" '$inputs' 
        ]]>
    </command>
    <configfiles>
        <inputs name="inputs" />
        <configfile name="tessellate_script">
            <![CDATA[
import sys
import json
import os

input_json_path = sys.argv[1]
params = json.load(open(input_json_path, "r"))

# get the inputs
input_iter = []
#for $i, $s in enumerate( $file_format.tessellate_inputs )
pmfile_index=$i 
pmfile_path="${s.input.file_name}"
input_iter.append(pmfile_path)
params["file_format"]["tessellate_inputs"][pmfile_index]["file"]=pmfile_path
params["file_format"]["tessellate_inputs"][pmfile_index]["file_relative"]=str(pmfile_index)+".pdb"
#end for        

params["outfile"]="$outfile" 

print(params)
# pdblist tries to download the ids from PDB - so create this in the meantime
os.system("mkdir pdb")

# create relative path links
for v in params["file_format"]["tessellate_inputs"]:
    os.system("ln -s "+v["file"]+" "+ v["file_relative"])
    os.system("ln -s ../"+v["file_relative"]+" pdb/pdb"+ v["file_relative"]+".ent")


allinputs="\n".join(v["file_relative"] for v in params["file_format"]["tessellate_inputs"])
# pdb option not available so creating pdblist
with open("pdblist.tmp",'w+') as f:
    f.write("\n".join(v["file_relative"] for v in params["file_format"]["tessellate_inputs"]))
os.system("tessellate "+ "pdblist.tmp" +" --input-format="+"pdblist"+" --output-format="+"$allparams.outputformat")

# copy to output
os.system("cp tessellate_report_pdblist.tmp.pandas.json"+" $outfile")
            ]]>
        </configfile>
    </configfiles>
    <inputs>
        <conditional name="file_format">
            <param name="selected_format" type="select" label="Select a file format:">
                <option value="pdb" selected="true">pdb</option>
            </param>
            <when value="pdb">
                <expand macro="multiple_input" name="tessellate_inputs" format="pdb" label="pdb input with molecule type" help_text="Select a pdb file in .pdb format"/>
            </when>
        </conditional>
    <section name="allparams" title="General Parameters" expanded="false">
        <param name="outputformat" type="select" label="Select an output format" >
                <option value="pandas" selected="true">pandas</option>
                <option value="json">json</option>
        </param>
    </section>

    </inputs>
    <outputs>
        <data format="pdb" name="outfile" label="${tool.name}: output">
        <change_format>
            <when input="selected_format" value="pdb" format="txt"/>
        </change_format>
        </data>
    </outputs>
    <help>
        <![CDATA[
**What it does**

Returns cyclic molecule conformation information.

**How it works**

- Select a molecule file type e.g. pdb

**User guide and documentation**

**Features not included**


        ]]>
    </help>
</tool>
